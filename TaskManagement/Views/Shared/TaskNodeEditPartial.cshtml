@model TaskManagement.ViewModels.TaskNodeAddTaskViewModel

@inject IViewLocalizer Localizer

@{
    //возвращает строку hours или hour (часы и час(а) для русской локали) в зависимости от того сколько часов
    string GetHoursString(int hours)
    {
        string culture = Localizer["Hours"].Value == "hours" ? "en" : "ru";

        if (culture == "en")
        {
            if (hours == 1)
                return Localizer["Hour"].Value.ToLower();
            else
                return Localizer["Hours"].Value.ToLower();
        }
        else
        {
            //в русском языке числа, оканчивающиеся на 1, 2, 3, 4 имеют не такое же склонение слов, как остальные числа
            //да, числа к строке приводить так не лучшая идея, но лучше, чем делить на 10^n
            if (hours.ToString().EndsWith("1") ||
                hours.ToString().EndsWith("2") ||
                hours.ToString().EndsWith("3") ||
                hours.ToString().EndsWith("4"))
                return Localizer["Hour"].Value.ToLower();
            else
                return Localizer["Hours"].Value.ToLower();
        }
    }
}

@if (Model != null)
{
    @* почему-то на форме с ajax не работает клиентская валидация стандартная в mvc, не разобрался в чём дело.
        Тут сделал клиентскую валидацию через html теги, но на сервере нормальная валидация*@
    <div class="validation" asp-validation-summary="ModelOnly"></div>
    @if (Model.ParentId == default)
    {
        <input class="detail-hide" style="display: none" type="text" asp-for="ParentId" value="@Model.ParentId" />
    }
    <input class="detail-input" style="display: none" type="text" asp-for="Id" value="@Model.Id" />
    <span class="detail-title">
        <input class="detail-input" type="text" required asp-for="Title" placeholder="@Localizer["TaskTitle"].Value" />
        <span asp-validation-for="Title"></span>
    </span>
    <span class="detail-description">
        <input class="detail-input" type="text" required asp-for="Description" placeholder="@Localizer["TaskDescription"].Value" />
        <span asp-validation-for="Description"></span>
    </span>
    <span class="detail-date-register">@Model.RegisterDate.ToString("dd/MM/yyyy HH:mm")</span>

    <span class="detail-executors">
        @Localizer["Executors"]: <input class="detail-input" type="text" required asp-for="Executors" placeholder="@Model.Executors" />
        <span asp-validation-for="Executors"></span>
    </span>
    <span class="detail-state detail-unchanging">
        @Localizer["State"]:
        @if (Model.TaskState == TaskNode.State.Assigned)
        {
            @Localizer["Assigned"]
        }
        else if (Model.TaskState == TaskNode.State.Executing)
        {
            @Localizer["Executing"]
        }
        else if (Model.TaskState == TaskNode.State.Suspend)
        {
            @Localizer["Suspend"]
        }
        else if (Model.TaskState == TaskNode.State.Complete)
        {
            @Localizer["Complete"]
        }

        <img class="detail-button execute unable" type="image" src="~/img/execute.png" />
        <img class="detail-button middle-button unable" type="image" src="~/img/pause.png" />
        <img class="detail-button danger-button unable" type="image" src="~/img/complete.png" />
    </span>


    <span class="detail-time-planned detail-unchanging">
        @Localizer["TimePlanned"]: @Model.ExecutionTimePlanned @GetHoursString(Model.ExecutionTimePlanned)
    </span>
    <span class="detail-time-actual detail-unchanging">
        @Localizer["TimeActual"]: @Model.ExecutionTimeActual @GetHoursString(Model.ExecutionTimeActual)
    </span>
    @if (Model.IsHavingChildren)
    {
        <span class="detail-time-planned detail-unchanging">
            @Localizer["ThisTimePlanned"]: @Model.ExecutionTimePlannedThis @GetHoursString(Model.ExecutionTimePlannedThis)
        </span>
        <span class="detail-time-planned detail-unchanging">
            @Localizer["ThisTimeActual"]: @Model.ExecutionTimeActualThis @GetHoursString(Model.ExecutionTimeActualThis)
        </span>
    }

    <input class="detail-save-button" type="submit" value="Save" />
}